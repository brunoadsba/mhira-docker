worker_processes 4;

events { worker_connections 1024; }

http {
    server {
        listen 80;
        root  /usr/share/nginx/html;
        include /etc/nginx/mime.types;

        # Proxy para GraphQL
        location /graphql {
            proxy_pass http://mhira-docker-test-backend-1:3000/graphql;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Tenant-Id $http_x_tenant_id;
            proxy_http_version 1.1;
            proxy_buffering off;
            proxy_pass_request_headers on;
            
            # Log detalhado para debug
            access_log /var/log/nginx/graphql_access.log;
            error_log /var/log/nginx/graphql_error.log;
        }

        # Service Worker - retornar 404 se n√£o existir
        location = /ngsw-worker.js {
            add_header Content-Type application/javascript;
            try_files $uri =404;
        }

        # Arquivos JS com no-cache agressivo
        location ~* \.(js)$ {
            add_header Content-Type application/javascript;
            add_header Cache-Control "no-cache, no-store, must-revalidate, max-age=0";
            add_header Pragma "no-cache";
            add_header Expires "Thu, 01 Jan 1970 00:00:00 GMT";
            add_header Last-Modified $date_gmt;
            add_header ETag off;
            try_files $uri =404;
        }

        # Arquivos CSS com no-cache
        location ~* \.(css)$ {
            add_header Content-Type text/css;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        # HTML com no-cache
        location ~* \.(html)$ {
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
            add_header Expires "0";
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
